#ifndef AV_SENSORS_HPP
#define AV_SENSORS_HPP
#include "stdint.h"

#include "_Filters.h"

#ifdef __cplusplus
 extern "C" {
#endif 


namespace src{	 

//-------------------------------------------------------------------------------------------------------------------
//	AnalogSensor - класс аналоговых датчиков, вычисляющих среднее (Mean) значение
//-------------------------------------------------------------------------------------------------------------------
//	Методы:
//	PutSample				- Положить в фильтр отсчет АЦП и обработать. Аргумент adc_sample - значение АЦП. Выполняется каждый период дискретизации
//	GetMean					- Получить значение в [PU]. Аргументу присваивается значение.
//	GetValue				- Получить значение в единицах измерения (В, А, ...). Аргументу присваивается значение.
//	SetTsTf					- Установить период дискретизации (ts) и постоянную времени фильтра (tf). ts и tf задаются в секундах (0.0002 сек и тп)
//	SetCalibration	- Установить калибровочный коэффициент

class AnalogSensor{
	public:
		// Конструкторы
		AnalogSensor();
		AnalogSensor (float ts, float tf);
		
		// Данные
		MeanFilter	meanFilter;		// Фильтр Mean
		
		// Методы
		inline	virtual	void GetValue	(float &v);
										void SetCalibration	(uint16_t calibration);	// Положить калибровочный коэффициент
	protected:
		float			_calibration_value;	// Калибровочный коэффициент
	
};


//-------------------------------------------------------------------------------------------------------------------------
//	AnalogRmsSensor - класс аналоговых датчиков, вычисляющих среднеквадратическое RMS значение
//-------------------------------------------------------------------------------------------------------------------------
//	Методы:
//	PutSample				- Положить в фильтр отсчет АЦП и обработать. Аргумент adc_sample - значение АЦП. Выполняется каждый период дискретизации
//	GetMean					- Получить значение в [PU]. Аргументу присваивается значение.
//	GetValue				- Получить значение в единицах измерения (В, А, ...). Аргументу присваивается значение.
//	SetTsTf					- Установить период дискретизации (ts) и постоянную времени фильтра (tf). ts и tf задаются в секундах (0.0002 сек и тп)
//	SetCalibration	- Установить калибровочный коэффициент
class AnalogRmsSensor : public AnalogSensor {
	public:
		// Конструкторы
		AnalogRmsSensor();
		AnalogRmsSensor(float ts, float tf);

		// Данные
		RmsFilter		rmsFilter;		// Фильтр RMS

		// Методы
		inline	void GetValue	(float &v);

	protected:
		float	_rms_value;	// RMS значение сигнала
};


//-------------------------------------------------------------------------------------------------------------------
//	Inline методы
//-------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------
//	GetValue				- Получить значение в единицах измерения (В, А, ...). Аргументу присваивается значение.
//-------------------------------------------------------------------------------------------------------------------
inline	void AnalogSensor::GetValue		(float &value)
{
	value = meanFilter.GetMean() * _calibration_value;
}


//-------------------------------------------------------------------------------------------------------------------
//	GetValue				- Получить значение в единицах измерения (В, А, ...). Аргументу присваивается значение.
//-------------------------------------------------------------------------------------------------------------------
inline	void AnalogRmsSensor::GetValue		(float &value)
{
	value = meanFilter.GetMean() * _calibration_value;
}

}
#ifdef __cplusplus
};
#endif
#endif	//define UART_HPP
